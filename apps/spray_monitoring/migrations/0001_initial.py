# Generated by Django 4.0.5 on 2022-06-26 12:20

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('common', '0004_alter_user_districts'),
        ('survey', '0004_alter_surveyact_options'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActiveSubstance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_uz', models.CharField(max_length=128, unique=True)),
                ('name_en', models.CharField(max_length=128, unique=True)),
                ('name_ru', models.CharField(max_length=128, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Действующее вещество',
                'db_table': 'active_substance',
                'ordering': ['name_uz'],
            },
        ),
        migrations.CreateModel(
            name='EmptyContainersStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_uz', models.CharField(max_length=128, unique=True)),
                ('name_en', models.CharField(max_length=128, unique=True)),
                ('name_ru', models.CharField(max_length=128, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Пустые контейнеры',
                'db_table': 'empty_containers_status',
                'ordering': ['name_uz'],
            },
        ),
        migrations.CreateModel(
            name='Formulation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alpha_code_uz', models.CharField(max_length=8, unique=True)),
                ('alpha_code_en', models.CharField(max_length=8, unique=True)),
                ('alpha_code_ru', models.CharField(max_length=8, unique=True)),
                ('name_uz', models.CharField(max_length=128, unique=True)),
                ('name_en', models.CharField(max_length=128, unique=True)),
                ('name_ru', models.CharField(max_length=128, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Препаративная форма',
                'db_table': 'formulation',
                'ordering': ['name_uz'],
            },
        ),
        migrations.CreateModel(
            name='Insecticide',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_uz', models.CharField(max_length=128, unique=True)),
                ('name_en', models.CharField(max_length=128, unique=True)),
                ('name_ru', models.CharField(max_length=128, unique=True)),
                ('concentration', models.CharField(max_length=3)),
                ('is_active', models.BooleanField(default=True)),
                ('min_dose', models.DecimalField(decimal_places=3, max_digits=7)),
                ('mid_dose', models.DecimalField(decimal_places=3, max_digits=7)),
                ('max_dose', models.DecimalField(decimal_places=3, max_digits=7)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('active_substance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='insecticides', to='spray_monitoring.activesubstance')),
                ('formulation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='spray_monitoring.formulation')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='common.unit')),
            ],
            options={
                'verbose_name': 'Информация об инсектицидах(Коммерческое название)',
                'db_table': 'insecticide',
                'ordering': ['name_uz'],
            },
        ),
        migrations.CreateModel(
            name='ProtectiveClothing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_uz', models.CharField(max_length=128, unique=True)),
                ('name_en', models.CharField(max_length=128, unique=True)),
                ('name_ru', models.CharField(max_length=128, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Индивидуальные средства защиты',
                'db_table': 'protective_clothing',
                'ordering': ['name_uz'],
            },
        ),
        migrations.CreateModel(
            name='Sprayer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_uz', models.CharField(max_length=128, unique=True)),
                ('name_en', models.CharField(max_length=128, unique=True)),
                ('name_ru', models.CharField(max_length=128, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Опрыскиватель',
                'db_table': 'sprayer',
                'ordering': ['name_uz'],
            },
        ),
        migrations.CreateModel(
            name='SprayMonitoringAct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=11)),
                ('given_date', models.DateField()),
                ('territory_name', models.CharField(max_length=256)),
                ('geometry', django.contrib.gis.db.models.fields.MultiPointField(srid=4326)),
                ('infested_area_in_ha', models.DecimalField(decimal_places=4, max_digits=10)),
                ('treated_area_in_ha', models.DecimalField(decimal_places=4, max_digits=10)),
                ('vegetation', models.CharField(max_length=128)),
                ('vegetation_height_in_sm', models.DecimalField(decimal_places=4, max_digits=10)),
                ('damage_level', models.CharField(max_length=8)),
                ('damaged_area_in_ha', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('starting_at', models.DateTimeField()),
                ('ending_at', models.DateTimeField()),
                ('temperature_at_beginning', models.CharField(max_length=8)),
                ('temperature_at_end', models.CharField(max_length=8)),
                ('is_imago', models.BooleanField(default=False)),
                ('density', models.DecimalField(decimal_places=2, max_digits=5)),
                ('bands', models.BooleanField(default=False)),
                ('swarms', models.BooleanField(default=False)),
                ('scattered', models.BooleanField(default=False)),
                ('sprayer_model', models.CharField(max_length=128)),
                ('atomizer_height_above_ground_in_m', models.DecimalField(decimal_places=2, max_digits=5)),
                ('barriers', models.BooleanField(default=False)),
                ('length_of_barriers_in_m', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('distance_between_barriers_in_m', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('average_speed_of_movement_in_km_s', models.DecimalField(decimal_places=2, max_digits=7)),
                ('is_clean_protective_clothing', models.BooleanField(default=True)),
                ('adverse_effect_to_fumigator', models.BooleanField(default=False)),
                ('is_effected_on_non_target_organisms', models.BooleanField(default=False)),
                ('note', models.TextField()),
                ('status', models.IntegerField(choices=[(1, 'Сохранено'), (2, 'Одобренный')], default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.district')),
                ('empty_containers_status', models.ManyToManyField(related_name='+', to='spray_monitoring.emptycontainersstatus')),
                ('fumigator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spray_monitoring_acts', to=settings.AUTH_USER_MODEL)),
                ('locust', models.ManyToManyField(related_name='+', to='survey.locust')),
                ('locust_age', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='survey.locustage')),
                ('locust_stage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='survey.locuststage')),
                ('protective_clothing', models.ManyToManyField(related_name='+', to='spray_monitoring.protectiveclothing')),
                ('sprayer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='spray_monitoring.sprayer')),
                ('vegetation_cover', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='survey.vegetationcover')),
            ],
            options={
                'verbose_name': 'Противосаранчовые обработки',
                'db_table': 'spray_monitoring_act',
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='SpentInsecticide',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dose', models.DecimalField(decimal_places=3, max_digits=7)),
                ('amount', models.DecimalField(decimal_places=3, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('insecticide', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='spray_monitoring.insecticide')),
                ('spray_monitoring_act', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spent_insecticides', to='spray_monitoring.spraymonitoringact')),
            ],
            options={
                'db_table': 'spent_insecticide',
            },
        ),
        migrations.CreateModel(
            name='InsecticidesYearlyRemainder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=3, max_digits=15)),
                ('year', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('insecticide', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='spray_monitoring.insecticide')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='insecticides_yearly_remainders', to='common.region')),
            ],
            options={
                'db_table': 'insecticides_yearly_remainder',
            },
        ),
        migrations.AddIndex(
            model_name='spraymonitoringact',
            index=models.Index(fields=['number'], name='spray_monit_number_8dabaf_idx'),
        ),
        migrations.AddIndex(
            model_name='spraymonitoringact',
            index=models.Index(fields=['given_date'], name='spray_monit_given_d_2d95fe_idx'),
        ),
    ]
